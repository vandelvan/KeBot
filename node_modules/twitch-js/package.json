{
  "_args": [
    [
      "twitch-js@next",
      "/home/jorozco/Documentos/KeBot"
    ]
  ],
  "_from": "twitch-js@next",
  "_hasShrinkwrap": false,
  "_id": "twitch-js@2.0.0-beta.33",
  "_inCache": true,
  "_installable": true,
  "_location": "/twitch-js",
  "_nodeVersion": "12.13.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/twitch-js_2.0.0-beta.33_1576009251414_0.4738032795062401"
  },
  "_npmUser": {
    "email": "marc.cg.andrews@gmail.com",
    "name": "marcandrews"
  },
  "_npmVersion": "6.12.1",
  "_phantomChildren": {
    "asynckit": "0.4.0",
    "combined-stream": "1.0.8",
    "mime-types": "2.1.27"
  },
  "_requested": {
    "name": "twitch-js",
    "raw": "twitch-js@next",
    "rawSpec": "next",
    "scope": null,
    "spec": "next",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/twitch-js/-/twitch-js-2.0.0-beta.33.tgz",
  "_shasum": "08c2287b236313ae0429d85d8bca1732494743db",
  "_shrinkwrap": null,
  "_spec": "twitch-js@next",
  "_where": "/home/jorozco/Documentos/KeBot",
  "author": {
    "name": "Marc Andrews"
  },
  "browser": {
    "form-data": "./shims/form-data.js",
    "node-fetch": "./shims/node-fetch.js",
    "pino": "pino/browser.js",
    "ws": "./shims/ws.js"
  },
  "bugs": {
    "url": "https://github.com/twitch-js/twitch-js/issues"
  },
  "dependencies": {
    "@types/invariant": "^2.2.30",
    "@types/lodash-es": "^4.17.3",
    "@types/node-fetch": "^2.5.4",
    "@types/pino": "^5.8.13",
    "@types/qs": "^6.9.0",
    "@types/ws": "^6.0.4",
    "camelcase-keys": "^6.1.1",
    "eventemitter3": "^4.0.0",
    "form-data": "^3.0.0",
    "invariant": "^2.2.4",
    "lodash": "^4.17.15",
    "node-fetch": "^2.2.0",
    "p-queue": "^6.2.1",
    "pino": "^5.14.0",
    "pino-pretty": "^3.4.0",
    "qs": "^6.5.2",
    "tekko": "2.4.0",
    "whatwg-fetch": "^3.0.0",
    "ws": "^7.2.0"
  },
  "description": "Javascript library for the Twitch Messaging Interface.",
  "devDependencies": {
    "@rollup/plugin-alias": "^2.2.0",
    "@rollup/plugin-json": "^4.0.0",
    "@rollup/plugin-replace": "^2.2.1",
    "@types/jest": "^24.0.23",
    "@typescript-eslint/eslint-plugin": "^2.9.0",
    "@typescript-eslint/parser": "^2.9.0",
    "@wessberg/rollup-plugin-ts": "^1.1.83",
    "benchmark": "^2.1.4",
    "codecov": "^3.0.2",
    "dotenv": "^8.2.0",
    "eslint": "^6.7.1",
    "eslint-config-prettier": "^6.7.0",
    "eslint-plugin-import": "2.18.2",
    "eslint-plugin-jest": "^23.0.5",
    "eslint-plugin-tsdoc": "^0.2.0",
    "husky": "^3.1.0",
    "jest": "^24.9.0",
    "jest-puppeteer": "^4.3.0",
    "lint-staged": "^9.5.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.10.2",
    "puppeteer": "^1.5.0",
    "rimraf": "^3.0.0",
    "rollup": "^1.27.5",
    "rollup-plugin-commonjs": "^10.1.0",
    "rollup-plugin-filesize": "^6.2.1",
    "rollup-plugin-gzip": "^2.2.0",
    "rollup-plugin-node-resolve": "^5.2.0",
    "rollup-plugin-terser": "^5.1.2",
    "semver": "^6.3.0",
    "terser": "^4.4.0",
    "ts-jest": "^24.2.0",
    "ts-node-dev": "^1.0.0-pre.44",
    "tslib": "^1.10.0",
    "typedoc": "^0.15.3",
    "typescript": "^3.7.2"
  },
  "directories": {},
  "dist": {
    "fileCount": 84,
    "integrity": "sha512-4INGDTYWlPLcuZ73/5sTiI5Z1rgwffzomgmY7ULPuI40HrNGhDASYvsHq+qFXdoyBrQFkZRsibI2n/m/2ERxCQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7/4jCRA9TVsSAnZWagAAJ5YQAJefCpFlWPTJy4zYkJlW\nxVAFvMMLftrysAJpYA90933uXAp1Mq0dN47HZUn8haoKF8iV2Pfo8n11EgD0\nV49ZkaNI/yXWJA9wAajfypCABpUuIi3qHN0JYnpwrIfg859qhAV4b4FHguef\n/CEfaz2ZH3tBz+DsVSRgtUImHo9RmAx+Lt6fPKalH7ALQHHDuZ6RrW9aexPz\nfZvf2b327OhzzpvgDBIX+6dwRHNwMTIc6HZvw+Zh9MAc9P0SCy6UCMySlMGd\nAVQfnV31mQQ1uGxJaqS1x9Z8hzXd/NXhC/CjdhnA0A2fdPMky3y8CndCIi5v\ntRYrFLbTR3SxVWGEGdrw9fW0Dl1ETNwboJh8XnrLfawjSarQOBY6AAcSQqH9\nR9K7lKWXFwtK6CxN98To/tcf8NAwWG/8dFbNq//gMV6eujcUipXUefh+wc56\nh37e5UMiCxGQ/1gPFGuhm4v0h4e285wQhTeLgkQzDWx+u/vMI42GJxRO6DUe\n1jdztaOywv1+fR/e+hLvAlxzmaZuR9SekoZMXU57XufN9+gshbjMq6H61p0s\nlLxHCNH4I6ezuHA49F7wZ8nwqxw/HCLoxA8Y6eodYXXqbzA+Lfi7goxdwi7Z\nO336wzSewQVV0TnVZo6NEIheqJ0hdNofhtPN/667a7b5RtCUtTb+aElmq2IY\nXZ9L\r\n=Xcjs\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "08c2287b236313ae0429d85d8bca1732494743db",
    "tarball": "https://registry.npmjs.org/twitch-js/-/twitch-js-2.0.0-beta.33.tgz",
    "unpackedSize": 1092983
  },
  "engines": {
    "node": ">=8",
    "yarn": "^1.9.2"
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "es6": true,
      "jest/globals": true,
      "node": true
    },
    "extends": [
      "plugin:@typescript-eslint/recommended",
      "prettier",
      "prettier/@typescript-eslint"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "jest"
    ],
    "rules": {
      "@typescript-eslint/explicit-function-return-type": 0,
      "@typescript-eslint/no-empty-interface": 0,
      "@typescript-eslint/no-explicit-any": 0,
      "jest/no-disabled-tests": 2,
      "no-alert": 2,
      "no-console": 2,
      "no-debugger": 2
    }
  },
  "eslintIgnore": [
    "dist",
    "lib",
    "node_modules"
  ],
  "gitHead": "c8afc4edd869bc30e2fcd55750bfb6e2e690b810",
  "homepage": "https://twitch-js.netlify.com",
  "husky": {
    "hooks": {
      "pre-commit": "yarn lint-staged"
    }
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coverageDirectory": "./coverage/",
    "projects": [
      {
        "displayName": "unit",
        "rootDir": "<rootDir>",
        "preset": "ts-jest",
        "globals": {
          "ts-jest": {
            "diagnostics": false
          }
        }
      },
      {
        "displayName": "e2e:browser",
        "rootDir": "<rootDir>/__e2e__/browser",
        "preset": "jest-puppeteer",
        "testMatch": [
          "**/?(*.)+(e2e).js"
        ]
      },
      {
        "displayName": "e2e:node",
        "rootDir": "<rootDir>/__e2e__/node",
        "preset": "ts-jest",
        "testEnvironment": "node",
        "testMatch": [
          "**/?(*.)+(e2e).ts"
        ]
      }
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/__mocks__",
      "<rootDir>/dist",
      "<rootDir>/lib",
      "<rootDir>/node_modules",
      "<rootDir>/shims"
    ]
  },
  "keywords": [
    "bot",
    "broadcast",
    "interface",
    "message",
    "messaging",
    "robot",
    "stream",
    "tmi",
    "twitch",
    "twitch.tv",
    "websocket",
    "ws"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.md": [
      "git add",
      "prettier --write"
    ],
    "*.ts": [
      "git add",
      "yarn lint",
      "yarn prettier --write"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "marcandrews",
      "email": "marc.cg.andrews@gmail.com"
    }
  ],
  "module": "es/index.js",
  "name": "twitch-js",
  "optionalDependencies": {},
  "prettier": {
    "bracketSpacing": true,
    "overrides": [
      {
        "files": [
          "examples/*",
          "shims/*"
        ],
        "options": {
          "semi": true
        }
      }
    ],
    "printWidth": 80,
    "proseWrap": "always",
    "semi": false,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "all",
    "useTabs": false
  },
  "readme": "<p align=\"center\">\n  <img width=\"128\" src=\"media/logo.svg\">\n</p>\n\n# [TwitchJS](https://twitch-js.github.io/twitch-js)\n\n[![Travis branch](https://img.shields.io/travis/com/twitch-js/twitch-js?longCache=true&style=flat-square)](https://travis-ci.org/twitch-js/twitch-js)\n[![Coverage Status](https://img.shields.io/codecov/c/github/twitch-js/twitch-js/next.svg?longCache=true&style=flat-square)](https://codecov.io/gh/twitch-js/twitch-js/branch/next)\n[![NPM version](https://img.shields.io/npm/v/twitch-js.svg?longCache=true&style=flat-square)](https://www.npmjs.com/package/twitch-js)\n[![NPM version@next](https://img.shields.io/npm/v/twitch-js/next.svg?longCache=true&style=flat-square)](https://www.npmjs.com/package/twitch-js/v/next)\n[![NPM downloads](https://img.shields.io/npm/dm/twitch-js.svg?longCache=true&style=flat-square)](https://www.npmjs.com/package/twitch-js)\n[![GitHub issues](https://img.shields.io/github/issues-raw/twitch-js/twitch-js.svg?longCache=true&style=flat-square)](https://github.com/twitch-js/twitch-js/issues)\n[![GitHub bug issues](https://img.shields.io/github/issues-raw/twitch-js/twitch-js/bug?style=flat-square)](https://github.com/twitch-js/twitch-js/issues?q=is%3Aopen+is%3Aissue+label%3Abug)\n\nA community-centric, community-supported Twitch JavaScript SDK.\n\n## Features\n\n- Aligns with official\n  [Twitch IRC documentation](https://dev.twitch.tv/docs/irc/)\n- Forward-compatible, low-level, minimally-assertive architecture\n- Supports Node environments\n- Supports Browsers\n- Supports TypeScript\n- Connect to multiple channels\n- Chat commands\n- Rate limiter\n\n### In progress...\n\nHere are the\n[planned features](https://github.com/twitch-js/twitch-js/milestones). If you\nfeel something is missing, create an issue or submit a PR against the next\nbranch.\n\n## Documentation\n\n1. [Getting started](#getting-started)\n2. [Authentication](#authentication)\n3. [Examples](#examples)\n4. [Interacting with Twitch chat](https://twitch-js.netlify.com/classes/chat.html)\n5. [Making requests to Twitch API](https://twitch-js.netlify.com/classes/api.html)\n6. [Reference](https://twitch-js.netlify.com/globals.html)\n\n## Getting started\n\n### Module bundler (CJS/ESM)\n\nIf you are using a module bundler, such [Webpack](https://webpack.js.org/),\n[Browserify](http://browserify.org/), or a in a Node environment:\n\n1. Add TwitchJS to your project:\n   ```bash\n   npm install --save twitch-js@next\n   ```\n2. Import TwitchJS\n\n   ```js\n   // ES2015 syntax\n   import TwitchJs from 'twitch-js'\n\n   // OR ES5 syntax\n   var TwitchJs = require('twitch-js')\n\n   const twitchJs = new TwitchJs({ username, token })\n   ```\n\n### Browser (IIFE)\n\nIf you are not using a module bundler, precompiled builds are available in the\n[`dist` folder](https://unpkg.com/twitch-js@>2.0.0-beta/dist/):\n\n1. Include a script tag in your HTML:\n   ```html\n   <script src=\"//unpkg.com/twitch-js@>2.0.0-beta.31\"></script>\n   ```\n2. Consume the library:\n   ```html\n   <script type=\"javascript\">\n     const twitchJs = new window.TwitchJs({ username, token })\n   </script>\n   ```\n\n## Authentication\n\n### Obtaining a client ID\n\nTo obtain a client ID, follow the\n[instructions](https://dev.twitch.tv/docs/authentication/#registration) found in\nthe [Twitch Developers documentation](https://dev.twitch.tv/docs).\n\n### Obtaining a token\n\nWith a client ID,\n[tokens may be generated](https://dev.twitch.tv/docs/authentication/#getting-tokens)\non behalf of your users.\n\nTo quickly get started without a client ID, you may generate token using the\nfollowing, community-maintained, sites:\n\n1. [Twitch Chat OAuth Password Generator](https://twitchapps.com/tmi)\n   (Kraken/v5)\n2. [Twitch Token Generator](https://twitchtokengenerator.com) (Helix)\n\n### Refreshing tokens\n\nWhile, Kraken/v5 tokens currently do not expire, Helix tokens expire and will\nneed to be refreshed.\n\nTo help with refreshing tokens, an `onAuthenticationFailure` function may be\nprovided to the Messaging and API clients. `onAuthenticationFailure()` must\nreturn a `Promise` that resolves with the refreshed token. Upon resolution, any\nactions that yielded a an _expired token_ response will be retried with the new,\nrefreshed token.\n\n#### Handling token refresh example\n\n```js\n// Optionally, use fetchUtil to help.\nimport fetchUtil from 'twitch-js/lib/utils/fetch'\n\nconst refreshToken = 'eyJfaWQmNzMtNGCJ9%6VFV5LNrZFUj8oU231/3Aj'\nconst clientId = 'fooid'\nconst secret = 'barbazsecret'\n\nconst onAuthenticationFailure = () =>\n  fetchUtil('https://id.twitch.tv/oauth2/token', {\n    method: 'post',\n    search: {\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: clientId,\n      client_secret: clientSecret,\n    },\n  }).then(response => response.accessToken)\n\nconst token = 'cfabdegwdoklmawdzdo98xt2fo512y'\nconst username = 'ronni'\nconst twitchJs = new TwitchJs({ token, username, onAuthenticationFailure })\n\ntwitchJs.chat.connect().then(globalUserState => {\n  // Do stuff ...\n})\n```\n\nSee\n[Refreshing access tokens](https://dev.twitch.tv/docs/authentication/#refreshing-access-tokens)\nfor more information.\n\n### More information\n\nSee the\n[Twitch Developers documentation](https://dev.twitch.tv/docs/authentication) for\nmore information on authentication.\n\n## Examples\n\nPlease see the `examples` folder for browser, Node and TypeScript examples.\n\n## Contribution guidelines\n\nIf you wish to contribute, please see the\n[CONTRIBUTING](https://github.com/twitch-js/twitch-js/blob/master/CONTRIBUTING.md)\ndoc.\n\n## Special thanks\n\n[Schmoopiie](https://github.com/Schmoopiie) and all the\n[original contributors](https://github.com/tmijs/tmi.js/graphs/contributors) of\n`tmi.js`.\n\n## License\n\nMIT\n\nTwitchJS is not affiliated, associated, authorized, endorsed by, or in any way\nofficially connected with [Twitch](https://www.twitch.tv/), or any of its\nsubsidiaries or its affiliates. The name \"Twitch\" as well as related names,\nmarks, emblems and images are registered trademarks of\n[Twitch](https://www.twitch.tv/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/twitch-js/twitch-js.git"
  },
  "runkitExampleFilename": "examples/node.js",
  "scripts": {
    "build": "run-p build:**",
    "build:dist": "rollup -c && mv es/types types",
    "build:lib": "tsc --project tsconfig.build.json",
    "clean": "rimraf dist lib es types",
    "docs:build": "typedoc",
    "docs:build:watch": "ts-node-dev --exec yarn docs:build",
    "lint": "eslint \"{__e2e__,__mocks__,examples,shims,src}/**/*.ts\"",
    "prebuild": "yarn clean",
    "predocs:build": "rimraf docs",
    "pretest:coverage": "rimraf coverage",
    "prettier": "prettier --list-different \"**/*.{ts,md}\"",
    "start:example": "ts-node-dev examples/node.js",
    "test": "jest",
    "test:coverage": "jest --maxWorkers=4 --collectCoverage src",
    "test:coverage:report": "yarn test:coverage && codecov",
    "test:e2e": "jest __e2e__",
    "test:e2e:browser": "jest __e2e__/browser",
    "test:e2e:node": "jest __e2e__/node",
    "test:types": "tsc --noEmit"
  },
  "types": "types/index.d.ts",
  "unpkg": "dist/twitch.js",
  "version": "2.0.0-beta.33"
}
